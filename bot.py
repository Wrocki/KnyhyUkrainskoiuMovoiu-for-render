import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
from datetime import datetime
import logging
import pytz
import sys
import asyncio

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    stream=sys.stdout,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
TOKEN = "7554224281:AAFR9eSa7oxRilNmM2kuh3tIhDWJu1B08ws"
GROUP_ID = -1002411083990

# –ö–µ—à –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
message_cache = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
    user = update.effective_user
    await update.message.reply_text(
        f"–í—ñ—Ç–∞—é, {user.first_name}! üìö\n"
        "–Ø –±–æ—Ç –¥–ª—è –ø–æ—à—É–∫—É –∫–Ω–∏–≥. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ:\n"
        "/search –Ω–∞–∑–≤–∞_–∫–Ω–∏–≥–∏ - –¥–ª—è –ø–æ—à—É–∫—É\n"
        "/status - –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É\n"
        "/help - –¥–æ–ø–æ–º–æ–≥–∞"
    )

async def search_book(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ—à—É–∫ –∫–Ω–∏–≥"""
    if len(context.args) < 1:
        await update.message.reply_text(
            "‚ÑπÔ∏è –Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –ø–æ—à—É–∫:\n"
            "/search –Ω–∞–∑–≤–∞_–∫–Ω–∏–≥–∏\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: /search –ö–æ–±–∑–∞—Ä"
        )
        return

    query = " ".join(context.args).lower()
    status_message = await update.message.reply_text("üîç –®—É–∫–∞—é –∫–Ω–∏–≥—É...")
    
    try:
        found_books = []
        # –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≥—Ä—É–ø–∏
        messages = await context.bot.copy_message(
            chat_id=update.effective_chat.id,
            from_chat_id=GROUP_ID,
            message_id=1,
            disable_notification=True
        )
        
        for msg in messages:
            if hasattr(msg, 'document') and msg.document:
                filename = msg.document.file_name.lower()
                if query in filename:
                    found_books.append(msg)
                    if len(found_books) >= 5:  # –û–±–º–µ–∂—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                        break

        if found_books:
            await status_message.edit_text(f"üìö –ó–Ω–∞–π–¥–µ–Ω–æ {len(found_books)} –∫–Ω–∏–≥:")
            for book in found_books:
                await context.bot.forward_message(
                    chat_id=update.effective_chat.id,
                    from_chat_id=GROUP_ID,
                    message_id=book.message_id
                )
            logger.info(f"–ó–Ω–∞–π–¥–µ–Ω–æ {len(found_books)} –∫–Ω–∏–≥ –¥–ª—è –∑–∞–ø–∏—Ç—É: {query}")
        else:
            await status_message.edit_text(
                "‚ùå –ö–Ω–∏–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.\n"
                "–°–ø—Ä–æ–±—É–π—Ç–µ:\n"
                "- –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è\n"
                "- –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫–æ—Ä–æ—Ç—à—É –Ω–∞–∑–≤—É\n"
                "- –ü–æ—à—É–∫–∞—Ç–∏ —ñ–Ω—à—É –∫–Ω–∏–≥—É"
            )
            logger.info(f"–ö–Ω–∏–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –∑–∞–ø–∏—Ç—É: {query}")
            
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É: {str(e)}")
        await status_message.edit_text("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –±–æ—Ç–∞"""
    kyiv_tz = pytz.timezone('Europe/Kiev')
    current_time = datetime.now(kyiv_tz).strftime("%Y-%m-%d %H:%M:%S %Z")
    
    await update.message.reply_text(
        f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–Ω–∏–π\n"
        f"‚è∞ –ß–∞—Å: {current_time}\n"
        f"üìö –ë–∞–∑–∞ –∫–Ω–∏–≥: –∞–∫—Ç–∏–≤–Ω–∞\n"
        f"üîç –ü–æ—à—É–∫: –¥–æ—Å—Ç—É–ø–Ω–∏–π"
    )
    logger.info("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –≤–∏–∫–æ–Ω–∞–Ω–∞")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–≤—ñ–¥–∫–∞"""
    await update.message.reply_text(
        "üìñ –î–æ–≤—ñ–¥–∫–∞ –ø–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—é –±–æ—Ç–∞:\n\n"
        "1Ô∏è‚É£ –ü–æ—à—É–∫ –∫–Ω–∏–≥–∏:\n"
        "/search –Ω–∞–∑–≤–∞_–∫–Ω–∏–≥–∏\n"
        "–ü—Ä–∏–∫–ª–∞–¥: /search –ö–æ–±–∑–∞—Ä\n\n"
        "2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É:\n"
        "/status\n\n"
        "3Ô∏è‚É£ –ü–æ—á–∞—Ç–æ–∫ —Ä–æ–±–æ—Ç–∏:\n"
        "/start\n\n"
        "‚ùóÔ∏è –ü–æ—Ä–∞–¥–∏:\n"
        "- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —á–∞—Å—Ç–∏–Ω—É –Ω–∞–∑–≤–∏ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –ø–æ—à—É–∫—É\n"
        "- –ü–æ—à—É–∫ –Ω–µ —á—É—Ç–ª–∏–≤–∏–π –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É\n"
        "- –Ø–∫—â–æ –∫–Ω–∏–≥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Å–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –Ω–∞–∑–≤–∏"
    )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫"""
    logger.error(f"Update {update} caused error {context.error}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É
        application = Application.builder().token(TOKEN).build()

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("search", search_book))
        application.add_handler(CommandHandler("status", status))
        application.add_handler(CommandHandler("help", help_command))

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –ø–æ–º–∏–ª–æ–∫
        application.add_error_handler(error_handler)

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π...")
        application.run_polling(drop_pending_updates=True)
        
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()
